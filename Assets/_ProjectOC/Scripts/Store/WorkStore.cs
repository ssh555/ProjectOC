using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace ProjectOC.StoreNS
{
    [System.Serializable]
    public class WorldStore : MonoBehaviour, IInteractionObject
    {
        //// <summary>
        //// 要显示的图标，可以为null,不显示
        //// </summary>
        //public Texture2D Icon;
        ///// <summary>
        ///// 图标的最大显示距离
        ///// 与Player计算，在范围内就转换坐标显示在Screen上
        ///// </summary>
        //const float IconMaxShowDistance = 20;
        //// 只需要有一个ScreenCamera => 在转换后的Screen坐标显示此Image
        //// Icon不为空&在显示范围内 => 显示，实时转换World坐标为Screen坐标进行显示
        //public Image UIIcon;
        //// 交互提示UI : 键位+文本描述
        //const RectTransform UIInteractTip
        //// 仓库的交互面板，共用一个，只显示与更新打开的那个仓库的数据
        //// 加入UI栈的单独层级的UIPanel
        //static RectTransform UIInteractPanel
        //// Icon图标选择面板，更替当前仓库的Icon
        //// 仓库Icon、每项存储的Icon、每项存储的类型选择共用,每次打开前根据选择项更新显示数据
        //// 加入UI栈的单独层级的UIPanel
        //static RectTransform UIIconSelectionPanel
        //// 仓库与背包的存取交互面板
        //// 加入UI栈的单独层级的UIPanel
        //static RectTransform UIStoreAccessPanel
        //// 可交互时显示 UIInteractTip
        //// 注册此仓库数据更改时更改UI显示事件(InteractPanel)
        //virtual void OnShow(object Instigator)
        //// 不可交互时隐藏UIInteractTip
        //// 注销此仓库数据更改时更改UI显示事件(InteractPanel)
        //virtual void OnHide(object Instigator)
        //// 执行交互时调用
        //// 更新为当前仓库的数据
        //// 显示InteractPanel
        //void Interact(object Instigator)
    }
}

