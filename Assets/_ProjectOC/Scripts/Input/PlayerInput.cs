//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/_ProjectOC/Scripts/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace ProjectOC.Input
{
    public partial class @PlayerInput: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""8cd95e8a-283c-42ff-af42-bc48c0ddea69"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""ca903eb0-d478-4b3b-baa6-5cf393b60ea6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Acc"",
                    ""type"": ""Button"",
                    ""id"": ""f40e48c5-1d64-4514-9bdd-3d40800379eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""4df1b140-4407-4449-82ba-ad27f88733d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""1d06b6f3-d8fb-4245-b82b-f3e692ce704e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseX"",
                    ""type"": ""Value"",
                    ""id"": ""021baf43-441a-4182-9a5a-596bacda70f3"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""Scale"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseY"",
                    ""type"": ""Value"",
                    ""id"": ""5c05d374-0ee9-440f-868c-a312111bdd4e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""Scale"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""OpenBotUI"",
                    ""type"": ""Button"",
                    ""id"": ""c51a75d1-aca8-4df9-a513-e61e6373f4e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4e5062f4-d1da-49c2-af5a-d4a4e3e89564"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b6b2759c-aff9-47c3-9922-7d68738b472d"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Acc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb08b731-b855-4c96-89e9-b8ff6f748ed3"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Acc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c340f86-90ea-4eec-977a-7e0080a54cbb"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b6c1b3d-78de-42cb-9add-5c5c27e5b24e"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afb4e924-0e70-421c-98be-48ed13c6d163"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0eae1f6a-e0ff-463a-b088-33a24d852ad5"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""KeyBoardInputDirection"",
                    ""id"": ""b2fe77f9-fa2a-4ebb-b296-3d6fd56962bf"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""76f8e9e2-b2ca-43e7-8c1c-10e9ff4ac737"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""87d0fa97-92a7-4ccb-96e4-a2de802ec370"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2ca72652-b6a4-4eb7-a5f0-a70607a84e0c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""928439b9-240f-4acd-bd25-d534e6430d51"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XBOXInputDirection"",
                    ""id"": ""eddac424-a268-4430-b159-f71eaa6fd407"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e630da2f-5bc2-476f-aec4-4f34bfb59cb1"",
                    ""path"": ""<XInputController>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""217d31c0-fcac-4eea-8040-f6d095d3964d"",
                    ""path"": ""<XInputController>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""118b4d7d-dcbe-4e3e-bc0e-1ee7d5508a5a"",
                    ""path"": ""<XInputController>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8c109980-f45c-4f72-9da4-5973f44f1a75"",
                    ""path"": ""<XInputController>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""MouseX"",
                    ""id"": ""0300f32d-0324-4740-86ff-3065e60b42e9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=0.3)"",
                    ""groups"": """",
                    ""action"": ""MouseX"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3c6e2a43-ad3b-43a1-91fb-8906634f3dbf"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""33b623f7-9613-4128-90a4-6e041f7c92be"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XBOX"",
                    ""id"": ""a2129af4-465c-4ed2-8db6-bc90aecd3b40"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseX"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a70be8e4-394b-4cba-b9a4-983f5e9a2647"",
                    ""path"": ""<XInputController>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""3316047c-9658-4761-bb43-8032f80ecc06"",
                    ""path"": ""<XInputController>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""MouseY"",
                    ""id"": ""f2e79e28-1ad6-4942-ab34-e84ed109e82d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=0.3)"",
                    ""groups"": """",
                    ""action"": ""MouseY"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""5615eecb-52c2-4f2a-bfe8-1b4adfb6b296"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2f8ae0b7-002b-47b3-83c8-36c35baa1ceb"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XBOX"",
                    ""id"": ""4691265d-7947-46ed-99c5-9063678ec754"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseY"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c4c28e6b-d899-4e6c-afec-f59c23dcd143"",
                    ""path"": ""<XInputController>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""906f1775-dbc2-49b5-9cdd-c086d5b5e08a"",
                    ""path"": ""<XInputController>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2355a4a4-d2bb-4832-886c-a43ec6707981"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenBotUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""daebb05f-51df-457d-b0ac-6ef65a0a1c11"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenBotUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""MouseScroll"",
                    ""id"": ""d3a6341a-4205-4735-835f-5220078d01e4"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=0.05)"",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""008e84c6-850c-47e9-98f5-a10723e0b9d3"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a1b4ff69-d15c-47d1-b7c1-c2b24f154d9b"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ButtonScroll"",
                    ""id"": ""2d555810-adc6-4fd3-b192-0478b01efd26"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""544c8b65-2aef-4eb6-9f72-c5d63a7a51f8"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f623b096-cb5b-46d3-9a66-c977b7bb32dc"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""PlayerUIBot"",
            ""id"": ""9e3fc58b-0ad1-4776-be41-29664b9240d0"",
            ""actions"": [
                {
                    ""name"": ""OpenMenu"",
                    ""type"": ""Button"",
                    ""id"": ""27f7a73d-11b8-4591-bf27-2e94d794c16a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""OpenMap"",
                    ""type"": ""Button"",
                    ""id"": ""a35a7b80-5fec-414f-9f2f-9a910333ff29"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectGrid"",
                    ""type"": ""Value"",
                    ""id"": ""ae36565b-a263-4e67-b282-ab5c3b19fb44"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2475cd1a-209b-47f2-915f-f284bac44061"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectGrid"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0f875b4f-6b2b-4773-8adc-8ae0d5b89f34"",
                    ""path"": ""<XInputController>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""001aa6bf-3eef-4014-a73c-f832140e6a9e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""78c1ee5b-ea6d-4dc8-86d6-21e65cfee659"",
                    ""path"": ""<XInputController>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7d3d09cf-cc4f-4568-b369-ff901c05576c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4fb86ed1-8a40-4613-bb0f-907666e31ea4"",
                    ""path"": ""<XInputController>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a4d29b8b-e3be-4bf4-845d-4326dff63720"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e0d551e6-d1cf-4236-ba16-64c0b5eb7ef7"",
                    ""path"": ""<XInputController>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c04c303b-c884-436a-8cda-3c49601b32e0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2cd182ea-62c8-4023-9ac9-6ef845de0dc7"",
                    ""path"": ""<XInputController>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""607a20dd-ca00-4c35-ad14-8b5882358ba0"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""239e1db5-a8ed-4123-b594-ae88a93a3f94"",
                    ""path"": ""<XInputController>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93b8d105-e30c-405f-85eb-ec4d74bb2726"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""TechTree"",
            ""id"": ""2c61ba0d-549f-46fb-9ae4-3a551b982404"",
            ""actions"": [
                {
                    ""name"": ""LastTerm"",
                    ""type"": ""Button"",
                    ""id"": ""d8b4fada-3c87-4dee-8381-5cd011dd4c37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextTerm"",
                    ""type"": ""Button"",
                    ""id"": ""b0c4cc69-cec8-4230-ba75-1addfad3d6ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Decipher"",
                    ""type"": ""Button"",
                    ""id"": ""13e72e23-1601-44f4-9ba8-8f95579a8983"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AlterTP"",
                    ""type"": ""Value"",
                    ""id"": ""b6cbedcf-d640-46ea-b6a8-557c4c546119"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Inspect"",
                    ""type"": ""Button"",
                    ""id"": ""c7c3180c-7c05-442e-b58e-d7963a379abc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8c4c2afe-29cb-41ca-9588-89f0ef9ba553"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LastTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b25ba123-a791-4d08-a767-9cfc1d136454"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LastTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7990367e-eef4-4998-a829-b05b18258f48"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65510378-d157-46e6-9141-8a461db135c4"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76c8a350-57a7-435c-888d-c04215343e2e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decipher"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2455d40a-af07-4ad8-a734-48fa1ec8d27b"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decipher"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""c43d8a2a-ed7c-47a0-a513-e931cf9b4927"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterTP"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7a0bff3a-67fd-4f2b-8912-106d87491b85"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterTP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""85b07b18-fa5e-4664-94ea-a123aeaca291"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterTP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0aca844c-190e-4f31-98e8-f76862979ee5"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterTP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""10051ceb-6f5f-48c6-9354-8685fee0ac1e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterTP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XBOX"",
                    ""id"": ""4f2f1575-fd37-4ff8-9c58-352c06b5f470"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterTP"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""729bdd78-b8dd-406c-a519-1e536e570ffc"",
                    ""path"": ""<XInputController>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterTP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a72208ae-9cf2-4273-94a4-44f3ab94a2c7"",
                    ""path"": ""<XInputController>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterTP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""03caaa94-1cc8-4f45-a2c5-67f8892ffdcf"",
                    ""path"": ""<XInputController>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterTP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2ed67f45-c610-4d51-b9d8-88efb76524ee"",
                    ""path"": ""<XInputController>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterTP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f2e399bd-8e02-4da6-9e1b-de27ebdb7d07"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inspect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f688b7d8-4b09-4939-9006-b9ed57af7e64"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inspect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerUI"",
            ""id"": ""4798033b-71dc-4790-8049-9b265bf9cf30"",
            ""actions"": [
                {
                    ""name"": ""AlterSelected"",
                    ""type"": ""Value"",
                    ""id"": ""3f5931db-7476-4692-923b-f779d592c9eb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""KeyBoard"",
                    ""id"": ""7b131fad-d494-4de7-a368-e5b96c9db53d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterSelected"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a20c0cbe-8308-4849-b2eb-a38b64970afa"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterSelected"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""35fbd56b-a7bc-40b5-afae-761dc454608b"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterSelected"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""870149b0-7e43-4b1d-88fe-73876eeef49a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterSelected"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""99425982-f153-4ac2-811e-599315cb827b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterSelected"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XBOX"",
                    ""id"": ""4a0ea280-a551-4a68-a171-774ecb7ee03d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterSelected"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9889cd8e-043e-42e7-ba19-f951e21e4b41"",
                    ""path"": ""<XInputController>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterSelected"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""cce319de-2849-4f21-86df-6db00449bc26"",
                    ""path"": ""<XInputController>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterSelected"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4b0ebd66-b18e-4e94-b8ce-1e52b4a7984f"",
                    ""path"": ""<XInputController>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterSelected"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ecc2ff30-566f-4481-b51b-cc3a2fbcd67a"",
                    ""path"": ""<XInputController>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterSelected"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""UIInventory"",
            ""id"": ""7057597f-dd83-480d-a439-81cedab5aa7f"",
            ""actions"": [
                {
                    ""name"": ""Drop"",
                    ""type"": ""Button"",
                    ""id"": ""4014e338-cad2-4b21-9c9f-9a0fe97b8566"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Destroy"",
                    ""type"": ""Button"",
                    ""id"": ""b9b4cd53-3dac-468c-ae83-a5ce6333b3e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""0f2c2a2f-76a5-4bb3-862b-17bf201eafa9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AlterItem"",
                    ""type"": ""Button"",
                    ""id"": ""3c54a2cf-a79c-4d0c-b90f-c38578702cc5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""NextTerm"",
                    ""type"": ""Button"",
                    ""id"": ""d57e1367-4ab5-4d2b-91f1-860c1853fee5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LastTerm"",
                    ""type"": ""Button"",
                    ""id"": ""902c2dc0-d0b1-48e2-8fb5-9244a6e9fb86"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""30f1b5fe-1721-41f6-92e7-b2426f09bb0e"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LastTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c055c47-262d-4863-aaf4-1cc2064f0cfb"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LastTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""109c8526-a9bc-4787-a7ec-b809fb945e99"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7917561-d6b7-410f-9400-8d4c3bfb5609"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""KeyBoard"",
                    ""id"": ""9ba20314-7515-44d4-abe0-3a9c7df45480"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterItem"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d8674d65-cfcb-4f50-b37b-0f7466baaedf"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""11efd7ea-7754-47c6-af55-01b2f9991fd0"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b60ad2d8-deb7-4e20-816b-fa4130f54f94"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1c19dc0a-a652-4659-acd7-8781300c82b3"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XBOX"",
                    ""id"": ""c0a3caf4-0a48-4820-9a92-ede9edc777f4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterItem"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f05114a4-8dba-4ce0-a8d1-dfddfaeb7d86"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1af2987f-15c2-4de2-ab90-548279db8cb0"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b9852f43-e7f6-4b87-aaac-cd80061222b6"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""89e0adca-e904-47b0-8c4a-8e25a19a895a"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AlterItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""52440aff-e5a6-4c3b-9cc3-ee4ba619e61e"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Destroy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06869f83-69a6-4663-b2cb-94769eccdc00"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Destroy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a2ac9e2-2be2-4b70-a2f2-dfd5651084e7"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""794b91b9-d9b4-4cd8-9079-d5c66b54d76b"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b0dca4e-d1de-4836-8aef-2d84b49d645f"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad42e9a8-e8ef-43e2-ad7d-c52ad70dff33"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIStore"",
            ""id"": ""6c9463f6-81a1-4ff6-ad81-9b25e52ed957"",
            ""actions"": [
                {
                    ""name"": ""ChangeIcon"",
                    ""type"": ""Button"",
                    ""id"": ""e187d8c7-7825-440a-b954-9c52e6b1f573"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextPriority"",
                    ""type"": ""Button"",
                    ""id"": ""127ae37f-8a08-4977-968a-aef14074cea4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeItem"",
                    ""type"": ""Value"",
                    ""id"": ""6e81e7cf-8e76-49fc-ad8a-6c71efc0deee"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Remove"",
                    ""type"": ""Button"",
                    ""id"": ""7ed51ab5-5c3a-4252-b1bc-dab3cdfa1df5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FastAdd"",
                    ""type"": ""Button"",
                    ""id"": ""e2a803a8-3c5b-485c-8587-3b41d4f8ceb8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Upgrade"",
                    ""type"": ""Button"",
                    ""id"": ""d60d6ab9-0a0f-44d7-bf1e-e1b964f968b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2d152131-bfef-4ab4-938a-15fe3a0c3fce"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextPriority"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""188683a8-cf0d-4cb1-aa6c-a983cbd2891e"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextPriority"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9146e27f-fc3f-4379-97fd-3535fc23c096"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Upgrade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34ccf2f4-fe5f-4b34-b387-4d304ee8d446"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Upgrade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7840604-f4f3-4dd9-b617-28cf525b3c7f"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeIcon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db8ad17a-856a-46cf-a9be-8d29947512c3"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeIcon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fa4ff71-f3de-4a1c-b6fa-88aed36a92d4"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FastAdd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90ab7934-3ce3-4621-83f6-63383b4af996"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FastAdd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""KeyBoard"",
                    ""id"": ""297ff535-d7bd-46fa-98db-267bb4e13202"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItem"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ef091520-7c52-4c87-b6d6-3f57c039751c"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""85c3c95f-5a69-41a3-b15a-f2562301cc95"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5fce3903-a615-4e8d-acc0-b6fb7fb3bdcc"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1f91c5ef-5fd3-4dc5-8de9-a87ac480392c"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XBOX"",
                    ""id"": ""9a91cc31-9418-4b95-b477-3f569471354d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItem"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""56dd0431-0a00-4263-b5bc-be90b8b458da"",
                    ""path"": ""<XInputController>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9f98b186-f89c-448f-8566-312367e49260"",
                    ""path"": ""<XInputController>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c28b91aa-4370-4ba2-9dfe-1cb222642a29"",
                    ""path"": ""<XInputController>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""267a4835-5f27-491d-90c3-f7b91b15a354"",
                    ""path"": ""<XInputController>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8ca4eeed-f748-4cf4-812f-da108307f1a1"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Remove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4d49e6c-7a66-43ce-a9aa-b95d4326b994"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Remove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIProNode"",
            ""id"": ""7be38ac4-f3e0-4298-af9f-bfb7129aba09"",
            ""actions"": [
                {
                    ""name"": ""Upgrade"",
                    ""type"": ""Button"",
                    ""id"": ""9ba3f665-0544-44f4-81a5-e794d0b0601c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextPriority"",
                    ""type"": ""Button"",
                    ""id"": ""8c21e479-24d3-4141-8f2c-446832cf9133"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Remove"",
                    ""type"": ""Button"",
                    ""id"": ""a43d0ad0-d595-433d-8740-83ccafaa5e74"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FastAdd"",
                    ""type"": ""Button"",
                    ""id"": ""b072730b-87c6-4f53-a412-856a6f31d311"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Alter"",
                    ""type"": ""Value"",
                    ""id"": ""16e5acf8-5707-4a30-b9af-a96fd8a4d4a7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f0fe7934-c340-479c-a4c8-9e9432a93f07"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextPriority"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53eb5514-2f08-44dc-9d84-165c1304659b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextPriority"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46301721-3ba5-4558-b9c1-93926e954c30"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Upgrade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d63c30d-26b5-41c0-9c64-5a2db20ecda6"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Upgrade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8cdc6c39-36f7-4977-ac32-d5b22450f706"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Remove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6ba8d4b-99d5-4d61-ac2b-d55a9675ca86"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Remove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eeb66f92-e2f3-4af7-bc1b-1a185c9ee96b"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FastAdd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc2c45bd-1644-44e8-acb6-caddd945b1b4"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FastAdd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""KeyBoard"",
                    ""id"": ""a49550c0-0bc0-4c40-83b7-193e67c2f3ec"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alter"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5a1ab771-ecf9-44bd-90ff-05d5bd23fede"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ec6f6b96-7dec-4260-bebc-a082911383b3"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""71169a9b-0255-49a7-bddc-b56a7d964cfd"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""428a1f65-6315-4bc5-ac1d-f337c6e621be"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""XBOX"",
                    ""id"": ""4fe83df4-ea62-4bc7-b605-b9c4a62e6f3b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alter"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e21b91ae-994a-40e2-84dd-ff65f42660e0"",
                    ""path"": ""<XInputController>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2184d062-f161-4343-8566-d2bccae81535"",
                    ""path"": ""<XInputController>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""68b52ce9-7cf1-458e-ab49-25b3df306dc0"",
                    ""path"": ""<XInputController>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""34cbf2a9-ceca-4851-9f19-73c081dbb1c1"",
                    ""path"": ""<XInputController>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Alter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""UIBed"",
            ""id"": ""ea10d783-1f35-436b-b922-41245bb5792b"",
            ""actions"": [
                {
                    ""name"": ""SetEmpty"",
                    ""type"": ""Button"",
                    ""id"": ""ed20eed7-2110-4f7d-a73f-99f59fb48c6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pre"",
                    ""type"": ""Button"",
                    ""id"": ""ba9e3cac-47eb-42dc-980c-d83d49260e0c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Post"",
                    ""type"": ""Button"",
                    ""id"": ""b1c670e3-782f-4a11-8665-d878fc699a46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b2d976c7-b5fe-4b0b-a1a9-256d0ebf2180"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SetEmpty"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0dc0c06d-6e01-42a6-95c5-fe62abaae88d"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SetEmpty"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2792c060-3060-4a5c-9c76-5278b9ef5712"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pre"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3d7670e-4cff-42dd-b313-bb4ea5eb3d52"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pre"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5037a0db-ad7c-4fc4-9860-025311571281"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Post"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""454d4e0f-ddd9-4549-ad10-878120f359e1"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Post"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ResonanceWheelUI"",
            ""id"": ""6e5ac5f4-d9f7-4c39-85c5-aecfe95acd57"",
            ""actions"": [
                {
                    ""name"": ""NextTerm"",
                    ""type"": ""Button"",
                    ""id"": ""fb13e663-6ccd-48fe-9948-2c8dec5bbe5b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LastTerm"",
                    ""type"": ""Button"",
                    ""id"": ""0e80f366-5e9f-4eb3-9bc5-f5b1785dafef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextGrid"",
                    ""type"": ""Value"",
                    ""id"": ""cfc9e177-6df9-4a6a-9a86-5672aa660108"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchTarget"",
                    ""type"": ""Button"",
                    ""id"": ""efa9df38-9634-49f3-8531-77c3bccb469a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartResonance"",
                    ""type"": ""Button"",
                    ""id"": ""fedda1c9-33da-44da-bd96-8919d1cc58c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopResonance"",
                    ""type"": ""Button"",
                    ""id"": ""a02b23b3-2e37-4f0a-bea9-1d132ef4d9bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""175a9304-8341-44ee-bbbd-6e7453d149cc"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84ddafbc-be4b-48f6-9b6b-b4170507b3ef"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a26aa622-009a-4575-bafa-184e598c8f2c"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LastTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a945e81-fd10-49d2-bd4e-966cb0b0b31e"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LastTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41355902-e9db-4246-94cf-2746fadbd5a1"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8b9cab1-9d6d-41e6-8b6f-4f04d806f063"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d78eb896-4b50-4aa1-b909-083af217fa9c"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartResonance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d7c1d8b-ccfa-43ee-b146-44c7d6ee3742"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartResonance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7a70bf2-8ce2-43af-8ef7-3152a00706c8"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopResonance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b9ae05a-ec28-4681-b501-713418c67f96"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopResonance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""86416eaa-55a1-40b9-be24-a46eede2daec"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d2c32268-48b6-4d4a-b7e0-d610290ced1f"",
                    ""path"": ""<XInputController>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d08a9bf0-8aa4-4e15-bed2-0b61abbba1c9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6c552d7e-2280-4cb6-941a-e1ed26372a2f"",
                    ""path"": ""<XInputController>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f870a1f8-fb94-483e-ac40-67c1aebf5615"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2cca8acd-88dd-4ae8-b7f4-6e001e13e5b0"",
                    ""path"": ""<XInputController>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d4ed186d-1086-49d1-96e6-70487d3b6ad5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b4d041df-62f8-466c-b74f-bb0af66087a8"",
                    ""path"": ""<XInputController>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1f7139f0-5a2d-4616-a40b-dbcef3f3161f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""OrderBoardPanel"",
            ""id"": ""06e0510c-459a-43f9-be7c-a9d6ab7b4800"",
            ""actions"": [
                {
                    ""name"": ""NextTerm"",
                    ""type"": ""Button"",
                    ""id"": ""b30a407d-5a60-436e-8653-04db31f1709e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LastTerm"",
                    ""type"": ""Button"",
                    ""id"": ""5831ea61-4e1f-4117-82cf-7d480bfa2348"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""76c01ed6-0063-45bc-ba83-ab0a13d47fa1"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33ea2913-8a4f-4cbd-a87d-5f88a4bc4564"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bac765c7-6409-4168-807e-38578e87629f"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LastTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""647f1e61-a292-47f9-be57-a3e14a304e4e"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LastTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ResonanceWheelUI_sub1"",
            ""id"": ""fbf093c0-22ab-44b5-a7d6-9c52881e65c6"",
            ""actions"": [
                {
                    ""name"": ""Expel"",
                    ""type"": ""Button"",
                    ""id"": ""e62efd25-6612-4367-b8b3-99d7c1dee753"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Receive"",
                    ""type"": ""Button"",
                    ""id"": ""73e621e0-7d69-46d0-8c2c-12a2dcbdfd39"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6552300a-e62b-4b00-874c-609101b4ea13"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Expel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a719b9a2-1bbd-484f-aefe-375594e668a5"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Expel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""014e2025-3273-47ff-ac0c-e437291fe9e5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Receive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b337ffcf-f1cd-4e6c-8f39-3f8cd1f220e3"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Receive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ResonanceWheelUI_sub2"",
            ""id"": ""f25047b5-b25f-4f74-b1f1-b45a7c8c5577"",
            ""actions"": [
                {
                    ""name"": ""LastTerm"",
                    ""type"": ""Button"",
                    ""id"": ""a2022e66-af29-4c54-b541-2664aefd0f0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextTerm"",
                    ""type"": ""Button"",
                    ""id"": ""ac1c3599-411a-43f5-a50e-c87b11839f6f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextGrid"",
                    ""type"": ""Value"",
                    ""id"": ""0bd5dbbc-da1f-4d19-acd3-6e725dcb6d4e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""aee12242-8a13-4c00-85f6-6a6cae036d8d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d3f51715-dc90-44f6-9055-a2a20924be4d"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5218c578-fe6d-4129-a255-64bfd7ec0ba9"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""169fd533-4f47-408a-9560-e2e964691150"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LastTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""534ee831-5158-4042-8edf-51c6725851d0"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LastTerm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""008d807b-ad0c-4c3b-a630-0b57c7f16dcf"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1269204-5736-414d-be58-24a3810a9d2b"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c5637abd-df5f-400e-9a41-acbab9c6777f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c6864867-4006-4877-9669-c020079510fc"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8abefbde-8e03-4d35-b806-24c2b0fcc31b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""34e6e505-5d81-4ccf-bcf9-259c50ab3da0"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""83c9cddd-d9ca-43f9-af44-76933fe7d4cd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8dcbb08d-1f68-4d34-83ae-d8078d0fe79e"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""06e013b3-69a5-458c-bd49-3f3567bf85e3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b1d8854e-4fe3-4d40-be8c-2eabe8a1571e"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ac0bc67b-7a77-4a75-bafd-f10f430a39bc"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextGrid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""BeastPanel"",
            ""id"": ""4967e72d-8fdc-4b8e-8be8-ea0880f7478e"",
            ""actions"": [
                {
                    ""name"": ""SwitchBeast"",
                    ""type"": ""Value"",
                    ""id"": ""66cabf0f-f00a-465d-805b-458e6654fdf5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Expel"",
                    ""type"": ""Button"",
                    ""id"": ""f239886f-7558-49c4-b7b9-1099b8fc7d9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""bb7b65a4-a069-4735-aa17-365c98648bf1"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchBeast"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""717215ad-4981-4274-a86d-dcd4e21b3bc4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchBeast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""39b87b38-782a-4048-a601-1685d9d911be"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchBeast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f5267953-e510-4e87-b889-54cc46e962e4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchBeast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""61e27a76-29dd-4d9c-9063-f25561d9f5fe"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchBeast"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3879aebe-59ae-4d3a-ac9a-883099cdd5d3"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Expel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de8f1017-e893-45bd-9bc2-92fe16a5f414"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Expel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Player
            m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
            m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
            m_Player_Acc = m_Player.FindAction("Acc", throwIfNotFound: true);
            m_Player_Crouch = m_Player.FindAction("Crouch", throwIfNotFound: true);
            m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
            m_Player_MouseX = m_Player.FindAction("MouseX", throwIfNotFound: true);
            m_Player_MouseY = m_Player.FindAction("MouseY", throwIfNotFound: true);
            m_Player_OpenBotUI = m_Player.FindAction("OpenBotUI", throwIfNotFound: true);
            m_Player_MouseScroll = m_Player.FindAction("MouseScroll", throwIfNotFound: true);
            // PlayerUIBot
            m_PlayerUIBot = asset.FindActionMap("PlayerUIBot", throwIfNotFound: true);
            m_PlayerUIBot_OpenMenu = m_PlayerUIBot.FindAction("OpenMenu", throwIfNotFound: true);
            m_PlayerUIBot_OpenMap = m_PlayerUIBot.FindAction("OpenMap", throwIfNotFound: true);
            m_PlayerUIBot_SelectGrid = m_PlayerUIBot.FindAction("SelectGrid", throwIfNotFound: true);
            // TechTree
            m_TechTree = asset.FindActionMap("TechTree", throwIfNotFound: true);
            m_TechTree_LastTerm = m_TechTree.FindAction("LastTerm", throwIfNotFound: true);
            m_TechTree_NextTerm = m_TechTree.FindAction("NextTerm", throwIfNotFound: true);
            m_TechTree_Decipher = m_TechTree.FindAction("Decipher", throwIfNotFound: true);
            m_TechTree_AlterTP = m_TechTree.FindAction("AlterTP", throwIfNotFound: true);
            m_TechTree_Inspect = m_TechTree.FindAction("Inspect", throwIfNotFound: true);
            // PlayerUI
            m_PlayerUI = asset.FindActionMap("PlayerUI", throwIfNotFound: true);
            m_PlayerUI_AlterSelected = m_PlayerUI.FindAction("AlterSelected", throwIfNotFound: true);
            // UIInventory
            m_UIInventory = asset.FindActionMap("UIInventory", throwIfNotFound: true);
            m_UIInventory_Drop = m_UIInventory.FindAction("Drop", throwIfNotFound: true);
            m_UIInventory_Destroy = m_UIInventory.FindAction("Destroy", throwIfNotFound: true);
            m_UIInventory_Use = m_UIInventory.FindAction("Use", throwIfNotFound: true);
            m_UIInventory_AlterItem = m_UIInventory.FindAction("AlterItem", throwIfNotFound: true);
            m_UIInventory_NextTerm = m_UIInventory.FindAction("NextTerm", throwIfNotFound: true);
            m_UIInventory_LastTerm = m_UIInventory.FindAction("LastTerm", throwIfNotFound: true);
            // UIStore
            m_UIStore = asset.FindActionMap("UIStore", throwIfNotFound: true);
            m_UIStore_ChangeIcon = m_UIStore.FindAction("ChangeIcon", throwIfNotFound: true);
            m_UIStore_NextPriority = m_UIStore.FindAction("NextPriority", throwIfNotFound: true);
            m_UIStore_ChangeItem = m_UIStore.FindAction("ChangeItem", throwIfNotFound: true);
            m_UIStore_Remove = m_UIStore.FindAction("Remove", throwIfNotFound: true);
            m_UIStore_FastAdd = m_UIStore.FindAction("FastAdd", throwIfNotFound: true);
            m_UIStore_Upgrade = m_UIStore.FindAction("Upgrade", throwIfNotFound: true);
            // UIProNode
            m_UIProNode = asset.FindActionMap("UIProNode", throwIfNotFound: true);
            m_UIProNode_Upgrade = m_UIProNode.FindAction("Upgrade", throwIfNotFound: true);
            m_UIProNode_NextPriority = m_UIProNode.FindAction("NextPriority", throwIfNotFound: true);
            m_UIProNode_Remove = m_UIProNode.FindAction("Remove", throwIfNotFound: true);
            m_UIProNode_FastAdd = m_UIProNode.FindAction("FastAdd", throwIfNotFound: true);
            m_UIProNode_Alter = m_UIProNode.FindAction("Alter", throwIfNotFound: true);
            // UIBed
            m_UIBed = asset.FindActionMap("UIBed", throwIfNotFound: true);
            m_UIBed_SetEmpty = m_UIBed.FindAction("SetEmpty", throwIfNotFound: true);
            m_UIBed_Pre = m_UIBed.FindAction("Pre", throwIfNotFound: true);
            m_UIBed_Post = m_UIBed.FindAction("Post", throwIfNotFound: true);
            // ResonanceWheelUI
            m_ResonanceWheelUI = asset.FindActionMap("ResonanceWheelUI", throwIfNotFound: true);
            m_ResonanceWheelUI_NextTerm = m_ResonanceWheelUI.FindAction("NextTerm", throwIfNotFound: true);
            m_ResonanceWheelUI_LastTerm = m_ResonanceWheelUI.FindAction("LastTerm", throwIfNotFound: true);
            m_ResonanceWheelUI_NextGrid = m_ResonanceWheelUI.FindAction("NextGrid", throwIfNotFound: true);
            m_ResonanceWheelUI_SwitchTarget = m_ResonanceWheelUI.FindAction("SwitchTarget", throwIfNotFound: true);
            m_ResonanceWheelUI_StartResonance = m_ResonanceWheelUI.FindAction("StartResonance", throwIfNotFound: true);
            m_ResonanceWheelUI_StopResonance = m_ResonanceWheelUI.FindAction("StopResonance", throwIfNotFound: true);
            // OrderBoardPanel
            m_OrderBoardPanel = asset.FindActionMap("OrderBoardPanel", throwIfNotFound: true);
            m_OrderBoardPanel_NextTerm = m_OrderBoardPanel.FindAction("NextTerm", throwIfNotFound: true);
            m_OrderBoardPanel_LastTerm = m_OrderBoardPanel.FindAction("LastTerm", throwIfNotFound: true);
            // ResonanceWheelUI_sub1
            m_ResonanceWheelUI_sub1 = asset.FindActionMap("ResonanceWheelUI_sub1", throwIfNotFound: true);
            m_ResonanceWheelUI_sub1_Expel = m_ResonanceWheelUI_sub1.FindAction("Expel", throwIfNotFound: true);
            m_ResonanceWheelUI_sub1_Receive = m_ResonanceWheelUI_sub1.FindAction("Receive", throwIfNotFound: true);
            // ResonanceWheelUI_sub2
            m_ResonanceWheelUI_sub2 = asset.FindActionMap("ResonanceWheelUI_sub2", throwIfNotFound: true);
            m_ResonanceWheelUI_sub2_LastTerm = m_ResonanceWheelUI_sub2.FindAction("LastTerm", throwIfNotFound: true);
            m_ResonanceWheelUI_sub2_NextTerm = m_ResonanceWheelUI_sub2.FindAction("NextTerm", throwIfNotFound: true);
            m_ResonanceWheelUI_sub2_NextGrid = m_ResonanceWheelUI_sub2.FindAction("NextGrid", throwIfNotFound: true);
            m_ResonanceWheelUI_sub2_Confirm = m_ResonanceWheelUI_sub2.FindAction("Confirm", throwIfNotFound: true);
            // BeastPanel
            m_BeastPanel = asset.FindActionMap("BeastPanel", throwIfNotFound: true);
            m_BeastPanel_SwitchBeast = m_BeastPanel.FindAction("SwitchBeast", throwIfNotFound: true);
            m_BeastPanel_Expel = m_BeastPanel.FindAction("Expel", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Player
        private readonly InputActionMap m_Player;
        private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
        private readonly InputAction m_Player_Move;
        private readonly InputAction m_Player_Acc;
        private readonly InputAction m_Player_Crouch;
        private readonly InputAction m_Player_Jump;
        private readonly InputAction m_Player_MouseX;
        private readonly InputAction m_Player_MouseY;
        private readonly InputAction m_Player_OpenBotUI;
        private readonly InputAction m_Player_MouseScroll;
        public struct PlayerActions
        {
            private @PlayerInput m_Wrapper;
            public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Player_Move;
            public InputAction @Acc => m_Wrapper.m_Player_Acc;
            public InputAction @Crouch => m_Wrapper.m_Player_Crouch;
            public InputAction @Jump => m_Wrapper.m_Player_Jump;
            public InputAction @MouseX => m_Wrapper.m_Player_MouseX;
            public InputAction @MouseY => m_Wrapper.m_Player_MouseY;
            public InputAction @OpenBotUI => m_Wrapper.m_Player_OpenBotUI;
            public InputAction @MouseScroll => m_Wrapper.m_Player_MouseScroll;
            public InputActionMap Get() { return m_Wrapper.m_Player; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
            public void AddCallbacks(IPlayerActions instance)
            {
                if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Acc.started += instance.OnAcc;
                @Acc.performed += instance.OnAcc;
                @Acc.canceled += instance.OnAcc;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MouseX.started += instance.OnMouseX;
                @MouseX.performed += instance.OnMouseX;
                @MouseX.canceled += instance.OnMouseX;
                @MouseY.started += instance.OnMouseY;
                @MouseY.performed += instance.OnMouseY;
                @MouseY.canceled += instance.OnMouseY;
                @OpenBotUI.started += instance.OnOpenBotUI;
                @OpenBotUI.performed += instance.OnOpenBotUI;
                @OpenBotUI.canceled += instance.OnOpenBotUI;
                @MouseScroll.started += instance.OnMouseScroll;
                @MouseScroll.performed += instance.OnMouseScroll;
                @MouseScroll.canceled += instance.OnMouseScroll;
            }

            private void UnregisterCallbacks(IPlayerActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @Acc.started -= instance.OnAcc;
                @Acc.performed -= instance.OnAcc;
                @Acc.canceled -= instance.OnAcc;
                @Crouch.started -= instance.OnCrouch;
                @Crouch.performed -= instance.OnCrouch;
                @Crouch.canceled -= instance.OnCrouch;
                @Jump.started -= instance.OnJump;
                @Jump.performed -= instance.OnJump;
                @Jump.canceled -= instance.OnJump;
                @MouseX.started -= instance.OnMouseX;
                @MouseX.performed -= instance.OnMouseX;
                @MouseX.canceled -= instance.OnMouseX;
                @MouseY.started -= instance.OnMouseY;
                @MouseY.performed -= instance.OnMouseY;
                @MouseY.canceled -= instance.OnMouseY;
                @OpenBotUI.started -= instance.OnOpenBotUI;
                @OpenBotUI.performed -= instance.OnOpenBotUI;
                @OpenBotUI.canceled -= instance.OnOpenBotUI;
                @MouseScroll.started -= instance.OnMouseScroll;
                @MouseScroll.performed -= instance.OnMouseScroll;
                @MouseScroll.canceled -= instance.OnMouseScroll;
            }

            public void RemoveCallbacks(IPlayerActions instance)
            {
                if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayerActions instance)
            {
                foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PlayerActions @Player => new PlayerActions(this);

        // PlayerUIBot
        private readonly InputActionMap m_PlayerUIBot;
        private List<IPlayerUIBotActions> m_PlayerUIBotActionsCallbackInterfaces = new List<IPlayerUIBotActions>();
        private readonly InputAction m_PlayerUIBot_OpenMenu;
        private readonly InputAction m_PlayerUIBot_OpenMap;
        private readonly InputAction m_PlayerUIBot_SelectGrid;
        public struct PlayerUIBotActions
        {
            private @PlayerInput m_Wrapper;
            public PlayerUIBotActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @OpenMenu => m_Wrapper.m_PlayerUIBot_OpenMenu;
            public InputAction @OpenMap => m_Wrapper.m_PlayerUIBot_OpenMap;
            public InputAction @SelectGrid => m_Wrapper.m_PlayerUIBot_SelectGrid;
            public InputActionMap Get() { return m_Wrapper.m_PlayerUIBot; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerUIBotActions set) { return set.Get(); }
            public void AddCallbacks(IPlayerUIBotActions instance)
            {
                if (instance == null || m_Wrapper.m_PlayerUIBotActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PlayerUIBotActionsCallbackInterfaces.Add(instance);
                @OpenMenu.started += instance.OnOpenMenu;
                @OpenMenu.performed += instance.OnOpenMenu;
                @OpenMenu.canceled += instance.OnOpenMenu;
                @OpenMap.started += instance.OnOpenMap;
                @OpenMap.performed += instance.OnOpenMap;
                @OpenMap.canceled += instance.OnOpenMap;
                @SelectGrid.started += instance.OnSelectGrid;
                @SelectGrid.performed += instance.OnSelectGrid;
                @SelectGrid.canceled += instance.OnSelectGrid;
            }

            private void UnregisterCallbacks(IPlayerUIBotActions instance)
            {
                @OpenMenu.started -= instance.OnOpenMenu;
                @OpenMenu.performed -= instance.OnOpenMenu;
                @OpenMenu.canceled -= instance.OnOpenMenu;
                @OpenMap.started -= instance.OnOpenMap;
                @OpenMap.performed -= instance.OnOpenMap;
                @OpenMap.canceled -= instance.OnOpenMap;
                @SelectGrid.started -= instance.OnSelectGrid;
                @SelectGrid.performed -= instance.OnSelectGrid;
                @SelectGrid.canceled -= instance.OnSelectGrid;
            }

            public void RemoveCallbacks(IPlayerUIBotActions instance)
            {
                if (m_Wrapper.m_PlayerUIBotActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayerUIBotActions instance)
            {
                foreach (var item in m_Wrapper.m_PlayerUIBotActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PlayerUIBotActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PlayerUIBotActions @PlayerUIBot => new PlayerUIBotActions(this);

        // TechTree
        private readonly InputActionMap m_TechTree;
        private List<ITechTreeActions> m_TechTreeActionsCallbackInterfaces = new List<ITechTreeActions>();
        private readonly InputAction m_TechTree_LastTerm;
        private readonly InputAction m_TechTree_NextTerm;
        private readonly InputAction m_TechTree_Decipher;
        private readonly InputAction m_TechTree_AlterTP;
        private readonly InputAction m_TechTree_Inspect;
        public struct TechTreeActions
        {
            private @PlayerInput m_Wrapper;
            public TechTreeActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @LastTerm => m_Wrapper.m_TechTree_LastTerm;
            public InputAction @NextTerm => m_Wrapper.m_TechTree_NextTerm;
            public InputAction @Decipher => m_Wrapper.m_TechTree_Decipher;
            public InputAction @AlterTP => m_Wrapper.m_TechTree_AlterTP;
            public InputAction @Inspect => m_Wrapper.m_TechTree_Inspect;
            public InputActionMap Get() { return m_Wrapper.m_TechTree; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(TechTreeActions set) { return set.Get(); }
            public void AddCallbacks(ITechTreeActions instance)
            {
                if (instance == null || m_Wrapper.m_TechTreeActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_TechTreeActionsCallbackInterfaces.Add(instance);
                @LastTerm.started += instance.OnLastTerm;
                @LastTerm.performed += instance.OnLastTerm;
                @LastTerm.canceled += instance.OnLastTerm;
                @NextTerm.started += instance.OnNextTerm;
                @NextTerm.performed += instance.OnNextTerm;
                @NextTerm.canceled += instance.OnNextTerm;
                @Decipher.started += instance.OnDecipher;
                @Decipher.performed += instance.OnDecipher;
                @Decipher.canceled += instance.OnDecipher;
                @AlterTP.started += instance.OnAlterTP;
                @AlterTP.performed += instance.OnAlterTP;
                @AlterTP.canceled += instance.OnAlterTP;
                @Inspect.started += instance.OnInspect;
                @Inspect.performed += instance.OnInspect;
                @Inspect.canceled += instance.OnInspect;
            }

            private void UnregisterCallbacks(ITechTreeActions instance)
            {
                @LastTerm.started -= instance.OnLastTerm;
                @LastTerm.performed -= instance.OnLastTerm;
                @LastTerm.canceled -= instance.OnLastTerm;
                @NextTerm.started -= instance.OnNextTerm;
                @NextTerm.performed -= instance.OnNextTerm;
                @NextTerm.canceled -= instance.OnNextTerm;
                @Decipher.started -= instance.OnDecipher;
                @Decipher.performed -= instance.OnDecipher;
                @Decipher.canceled -= instance.OnDecipher;
                @AlterTP.started -= instance.OnAlterTP;
                @AlterTP.performed -= instance.OnAlterTP;
                @AlterTP.canceled -= instance.OnAlterTP;
                @Inspect.started -= instance.OnInspect;
                @Inspect.performed -= instance.OnInspect;
                @Inspect.canceled -= instance.OnInspect;
            }

            public void RemoveCallbacks(ITechTreeActions instance)
            {
                if (m_Wrapper.m_TechTreeActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(ITechTreeActions instance)
            {
                foreach (var item in m_Wrapper.m_TechTreeActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_TechTreeActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public TechTreeActions @TechTree => new TechTreeActions(this);

        // PlayerUI
        private readonly InputActionMap m_PlayerUI;
        private List<IPlayerUIActions> m_PlayerUIActionsCallbackInterfaces = new List<IPlayerUIActions>();
        private readonly InputAction m_PlayerUI_AlterSelected;
        public struct PlayerUIActions
        {
            private @PlayerInput m_Wrapper;
            public PlayerUIActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @AlterSelected => m_Wrapper.m_PlayerUI_AlterSelected;
            public InputActionMap Get() { return m_Wrapper.m_PlayerUI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerUIActions set) { return set.Get(); }
            public void AddCallbacks(IPlayerUIActions instance)
            {
                if (instance == null || m_Wrapper.m_PlayerUIActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PlayerUIActionsCallbackInterfaces.Add(instance);
                @AlterSelected.started += instance.OnAlterSelected;
                @AlterSelected.performed += instance.OnAlterSelected;
                @AlterSelected.canceled += instance.OnAlterSelected;
            }

            private void UnregisterCallbacks(IPlayerUIActions instance)
            {
                @AlterSelected.started -= instance.OnAlterSelected;
                @AlterSelected.performed -= instance.OnAlterSelected;
                @AlterSelected.canceled -= instance.OnAlterSelected;
            }

            public void RemoveCallbacks(IPlayerUIActions instance)
            {
                if (m_Wrapper.m_PlayerUIActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayerUIActions instance)
            {
                foreach (var item in m_Wrapper.m_PlayerUIActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PlayerUIActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PlayerUIActions @PlayerUI => new PlayerUIActions(this);

        // UIInventory
        private readonly InputActionMap m_UIInventory;
        private List<IUIInventoryActions> m_UIInventoryActionsCallbackInterfaces = new List<IUIInventoryActions>();
        private readonly InputAction m_UIInventory_Drop;
        private readonly InputAction m_UIInventory_Destroy;
        private readonly InputAction m_UIInventory_Use;
        private readonly InputAction m_UIInventory_AlterItem;
        private readonly InputAction m_UIInventory_NextTerm;
        private readonly InputAction m_UIInventory_LastTerm;
        public struct UIInventoryActions
        {
            private @PlayerInput m_Wrapper;
            public UIInventoryActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @Drop => m_Wrapper.m_UIInventory_Drop;
            public InputAction @Destroy => m_Wrapper.m_UIInventory_Destroy;
            public InputAction @Use => m_Wrapper.m_UIInventory_Use;
            public InputAction @AlterItem => m_Wrapper.m_UIInventory_AlterItem;
            public InputAction @NextTerm => m_Wrapper.m_UIInventory_NextTerm;
            public InputAction @LastTerm => m_Wrapper.m_UIInventory_LastTerm;
            public InputActionMap Get() { return m_Wrapper.m_UIInventory; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(UIInventoryActions set) { return set.Get(); }
            public void AddCallbacks(IUIInventoryActions instance)
            {
                if (instance == null || m_Wrapper.m_UIInventoryActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_UIInventoryActionsCallbackInterfaces.Add(instance);
                @Drop.started += instance.OnDrop;
                @Drop.performed += instance.OnDrop;
                @Drop.canceled += instance.OnDrop;
                @Destroy.started += instance.OnDestroy;
                @Destroy.performed += instance.OnDestroy;
                @Destroy.canceled += instance.OnDestroy;
                @Use.started += instance.OnUse;
                @Use.performed += instance.OnUse;
                @Use.canceled += instance.OnUse;
                @AlterItem.started += instance.OnAlterItem;
                @AlterItem.performed += instance.OnAlterItem;
                @AlterItem.canceled += instance.OnAlterItem;
                @NextTerm.started += instance.OnNextTerm;
                @NextTerm.performed += instance.OnNextTerm;
                @NextTerm.canceled += instance.OnNextTerm;
                @LastTerm.started += instance.OnLastTerm;
                @LastTerm.performed += instance.OnLastTerm;
                @LastTerm.canceled += instance.OnLastTerm;
            }

            private void UnregisterCallbacks(IUIInventoryActions instance)
            {
                @Drop.started -= instance.OnDrop;
                @Drop.performed -= instance.OnDrop;
                @Drop.canceled -= instance.OnDrop;
                @Destroy.started -= instance.OnDestroy;
                @Destroy.performed -= instance.OnDestroy;
                @Destroy.canceled -= instance.OnDestroy;
                @Use.started -= instance.OnUse;
                @Use.performed -= instance.OnUse;
                @Use.canceled -= instance.OnUse;
                @AlterItem.started -= instance.OnAlterItem;
                @AlterItem.performed -= instance.OnAlterItem;
                @AlterItem.canceled -= instance.OnAlterItem;
                @NextTerm.started -= instance.OnNextTerm;
                @NextTerm.performed -= instance.OnNextTerm;
                @NextTerm.canceled -= instance.OnNextTerm;
                @LastTerm.started -= instance.OnLastTerm;
                @LastTerm.performed -= instance.OnLastTerm;
                @LastTerm.canceled -= instance.OnLastTerm;
            }

            public void RemoveCallbacks(IUIInventoryActions instance)
            {
                if (m_Wrapper.m_UIInventoryActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IUIInventoryActions instance)
            {
                foreach (var item in m_Wrapper.m_UIInventoryActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_UIInventoryActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public UIInventoryActions @UIInventory => new UIInventoryActions(this);

        // UIStore
        private readonly InputActionMap m_UIStore;
        private List<IUIStoreActions> m_UIStoreActionsCallbackInterfaces = new List<IUIStoreActions>();
        private readonly InputAction m_UIStore_ChangeIcon;
        private readonly InputAction m_UIStore_NextPriority;
        private readonly InputAction m_UIStore_ChangeItem;
        private readonly InputAction m_UIStore_Remove;
        private readonly InputAction m_UIStore_FastAdd;
        private readonly InputAction m_UIStore_Upgrade;
        public struct UIStoreActions
        {
            private @PlayerInput m_Wrapper;
            public UIStoreActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @ChangeIcon => m_Wrapper.m_UIStore_ChangeIcon;
            public InputAction @NextPriority => m_Wrapper.m_UIStore_NextPriority;
            public InputAction @ChangeItem => m_Wrapper.m_UIStore_ChangeItem;
            public InputAction @Remove => m_Wrapper.m_UIStore_Remove;
            public InputAction @FastAdd => m_Wrapper.m_UIStore_FastAdd;
            public InputAction @Upgrade => m_Wrapper.m_UIStore_Upgrade;
            public InputActionMap Get() { return m_Wrapper.m_UIStore; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(UIStoreActions set) { return set.Get(); }
            public void AddCallbacks(IUIStoreActions instance)
            {
                if (instance == null || m_Wrapper.m_UIStoreActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_UIStoreActionsCallbackInterfaces.Add(instance);
                @ChangeIcon.started += instance.OnChangeIcon;
                @ChangeIcon.performed += instance.OnChangeIcon;
                @ChangeIcon.canceled += instance.OnChangeIcon;
                @NextPriority.started += instance.OnNextPriority;
                @NextPriority.performed += instance.OnNextPriority;
                @NextPriority.canceled += instance.OnNextPriority;
                @ChangeItem.started += instance.OnChangeItem;
                @ChangeItem.performed += instance.OnChangeItem;
                @ChangeItem.canceled += instance.OnChangeItem;
                @Remove.started += instance.OnRemove;
                @Remove.performed += instance.OnRemove;
                @Remove.canceled += instance.OnRemove;
                @FastAdd.started += instance.OnFastAdd;
                @FastAdd.performed += instance.OnFastAdd;
                @FastAdd.canceled += instance.OnFastAdd;
                @Upgrade.started += instance.OnUpgrade;
                @Upgrade.performed += instance.OnUpgrade;
                @Upgrade.canceled += instance.OnUpgrade;
            }

            private void UnregisterCallbacks(IUIStoreActions instance)
            {
                @ChangeIcon.started -= instance.OnChangeIcon;
                @ChangeIcon.performed -= instance.OnChangeIcon;
                @ChangeIcon.canceled -= instance.OnChangeIcon;
                @NextPriority.started -= instance.OnNextPriority;
                @NextPriority.performed -= instance.OnNextPriority;
                @NextPriority.canceled -= instance.OnNextPriority;
                @ChangeItem.started -= instance.OnChangeItem;
                @ChangeItem.performed -= instance.OnChangeItem;
                @ChangeItem.canceled -= instance.OnChangeItem;
                @Remove.started -= instance.OnRemove;
                @Remove.performed -= instance.OnRemove;
                @Remove.canceled -= instance.OnRemove;
                @FastAdd.started -= instance.OnFastAdd;
                @FastAdd.performed -= instance.OnFastAdd;
                @FastAdd.canceled -= instance.OnFastAdd;
                @Upgrade.started -= instance.OnUpgrade;
                @Upgrade.performed -= instance.OnUpgrade;
                @Upgrade.canceled -= instance.OnUpgrade;
            }

            public void RemoveCallbacks(IUIStoreActions instance)
            {
                if (m_Wrapper.m_UIStoreActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IUIStoreActions instance)
            {
                foreach (var item in m_Wrapper.m_UIStoreActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_UIStoreActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public UIStoreActions @UIStore => new UIStoreActions(this);

        // UIProNode
        private readonly InputActionMap m_UIProNode;
        private List<IUIProNodeActions> m_UIProNodeActionsCallbackInterfaces = new List<IUIProNodeActions>();
        private readonly InputAction m_UIProNode_Upgrade;
        private readonly InputAction m_UIProNode_NextPriority;
        private readonly InputAction m_UIProNode_Remove;
        private readonly InputAction m_UIProNode_FastAdd;
        private readonly InputAction m_UIProNode_Alter;
        public struct UIProNodeActions
        {
            private @PlayerInput m_Wrapper;
            public UIProNodeActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @Upgrade => m_Wrapper.m_UIProNode_Upgrade;
            public InputAction @NextPriority => m_Wrapper.m_UIProNode_NextPriority;
            public InputAction @Remove => m_Wrapper.m_UIProNode_Remove;
            public InputAction @FastAdd => m_Wrapper.m_UIProNode_FastAdd;
            public InputAction @Alter => m_Wrapper.m_UIProNode_Alter;
            public InputActionMap Get() { return m_Wrapper.m_UIProNode; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(UIProNodeActions set) { return set.Get(); }
            public void AddCallbacks(IUIProNodeActions instance)
            {
                if (instance == null || m_Wrapper.m_UIProNodeActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_UIProNodeActionsCallbackInterfaces.Add(instance);
                @Upgrade.started += instance.OnUpgrade;
                @Upgrade.performed += instance.OnUpgrade;
                @Upgrade.canceled += instance.OnUpgrade;
                @NextPriority.started += instance.OnNextPriority;
                @NextPriority.performed += instance.OnNextPriority;
                @NextPriority.canceled += instance.OnNextPriority;
                @Remove.started += instance.OnRemove;
                @Remove.performed += instance.OnRemove;
                @Remove.canceled += instance.OnRemove;
                @FastAdd.started += instance.OnFastAdd;
                @FastAdd.performed += instance.OnFastAdd;
                @FastAdd.canceled += instance.OnFastAdd;
                @Alter.started += instance.OnAlter;
                @Alter.performed += instance.OnAlter;
                @Alter.canceled += instance.OnAlter;
            }

            private void UnregisterCallbacks(IUIProNodeActions instance)
            {
                @Upgrade.started -= instance.OnUpgrade;
                @Upgrade.performed -= instance.OnUpgrade;
                @Upgrade.canceled -= instance.OnUpgrade;
                @NextPriority.started -= instance.OnNextPriority;
                @NextPriority.performed -= instance.OnNextPriority;
                @NextPriority.canceled -= instance.OnNextPriority;
                @Remove.started -= instance.OnRemove;
                @Remove.performed -= instance.OnRemove;
                @Remove.canceled -= instance.OnRemove;
                @FastAdd.started -= instance.OnFastAdd;
                @FastAdd.performed -= instance.OnFastAdd;
                @FastAdd.canceled -= instance.OnFastAdd;
                @Alter.started -= instance.OnAlter;
                @Alter.performed -= instance.OnAlter;
                @Alter.canceled -= instance.OnAlter;
            }

            public void RemoveCallbacks(IUIProNodeActions instance)
            {
                if (m_Wrapper.m_UIProNodeActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IUIProNodeActions instance)
            {
                foreach (var item in m_Wrapper.m_UIProNodeActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_UIProNodeActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public UIProNodeActions @UIProNode => new UIProNodeActions(this);

        // UIBed
        private readonly InputActionMap m_UIBed;
        private List<IUIBedActions> m_UIBedActionsCallbackInterfaces = new List<IUIBedActions>();
        private readonly InputAction m_UIBed_SetEmpty;
        private readonly InputAction m_UIBed_Pre;
        private readonly InputAction m_UIBed_Post;
        public struct UIBedActions
        {
            private @PlayerInput m_Wrapper;
            public UIBedActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @SetEmpty => m_Wrapper.m_UIBed_SetEmpty;
            public InputAction @Pre => m_Wrapper.m_UIBed_Pre;
            public InputAction @Post => m_Wrapper.m_UIBed_Post;
            public InputActionMap Get() { return m_Wrapper.m_UIBed; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(UIBedActions set) { return set.Get(); }
            public void AddCallbacks(IUIBedActions instance)
            {
                if (instance == null || m_Wrapper.m_UIBedActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_UIBedActionsCallbackInterfaces.Add(instance);
                @SetEmpty.started += instance.OnSetEmpty;
                @SetEmpty.performed += instance.OnSetEmpty;
                @SetEmpty.canceled += instance.OnSetEmpty;
                @Pre.started += instance.OnPre;
                @Pre.performed += instance.OnPre;
                @Pre.canceled += instance.OnPre;
                @Post.started += instance.OnPost;
                @Post.performed += instance.OnPost;
                @Post.canceled += instance.OnPost;
            }

            private void UnregisterCallbacks(IUIBedActions instance)
            {
                @SetEmpty.started -= instance.OnSetEmpty;
                @SetEmpty.performed -= instance.OnSetEmpty;
                @SetEmpty.canceled -= instance.OnSetEmpty;
                @Pre.started -= instance.OnPre;
                @Pre.performed -= instance.OnPre;
                @Pre.canceled -= instance.OnPre;
                @Post.started -= instance.OnPost;
                @Post.performed -= instance.OnPost;
                @Post.canceled -= instance.OnPost;
            }

            public void RemoveCallbacks(IUIBedActions instance)
            {
                if (m_Wrapper.m_UIBedActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IUIBedActions instance)
            {
                foreach (var item in m_Wrapper.m_UIBedActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_UIBedActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public UIBedActions @UIBed => new UIBedActions(this);

        // ResonanceWheelUI
        private readonly InputActionMap m_ResonanceWheelUI;
        private List<IResonanceWheelUIActions> m_ResonanceWheelUIActionsCallbackInterfaces = new List<IResonanceWheelUIActions>();
        private readonly InputAction m_ResonanceWheelUI_NextTerm;
        private readonly InputAction m_ResonanceWheelUI_LastTerm;
        private readonly InputAction m_ResonanceWheelUI_NextGrid;
        private readonly InputAction m_ResonanceWheelUI_SwitchTarget;
        private readonly InputAction m_ResonanceWheelUI_StartResonance;
        private readonly InputAction m_ResonanceWheelUI_StopResonance;
        public struct ResonanceWheelUIActions
        {
            private @PlayerInput m_Wrapper;
            public ResonanceWheelUIActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @NextTerm => m_Wrapper.m_ResonanceWheelUI_NextTerm;
            public InputAction @LastTerm => m_Wrapper.m_ResonanceWheelUI_LastTerm;
            public InputAction @NextGrid => m_Wrapper.m_ResonanceWheelUI_NextGrid;
            public InputAction @SwitchTarget => m_Wrapper.m_ResonanceWheelUI_SwitchTarget;
            public InputAction @StartResonance => m_Wrapper.m_ResonanceWheelUI_StartResonance;
            public InputAction @StopResonance => m_Wrapper.m_ResonanceWheelUI_StopResonance;
            public InputActionMap Get() { return m_Wrapper.m_ResonanceWheelUI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(ResonanceWheelUIActions set) { return set.Get(); }
            public void AddCallbacks(IResonanceWheelUIActions instance)
            {
                if (instance == null || m_Wrapper.m_ResonanceWheelUIActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_ResonanceWheelUIActionsCallbackInterfaces.Add(instance);
                @NextTerm.started += instance.OnNextTerm;
                @NextTerm.performed += instance.OnNextTerm;
                @NextTerm.canceled += instance.OnNextTerm;
                @LastTerm.started += instance.OnLastTerm;
                @LastTerm.performed += instance.OnLastTerm;
                @LastTerm.canceled += instance.OnLastTerm;
                @NextGrid.started += instance.OnNextGrid;
                @NextGrid.performed += instance.OnNextGrid;
                @NextGrid.canceled += instance.OnNextGrid;
                @SwitchTarget.started += instance.OnSwitchTarget;
                @SwitchTarget.performed += instance.OnSwitchTarget;
                @SwitchTarget.canceled += instance.OnSwitchTarget;
                @StartResonance.started += instance.OnStartResonance;
                @StartResonance.performed += instance.OnStartResonance;
                @StartResonance.canceled += instance.OnStartResonance;
                @StopResonance.started += instance.OnStopResonance;
                @StopResonance.performed += instance.OnStopResonance;
                @StopResonance.canceled += instance.OnStopResonance;
            }

            private void UnregisterCallbacks(IResonanceWheelUIActions instance)
            {
                @NextTerm.started -= instance.OnNextTerm;
                @NextTerm.performed -= instance.OnNextTerm;
                @NextTerm.canceled -= instance.OnNextTerm;
                @LastTerm.started -= instance.OnLastTerm;
                @LastTerm.performed -= instance.OnLastTerm;
                @LastTerm.canceled -= instance.OnLastTerm;
                @NextGrid.started -= instance.OnNextGrid;
                @NextGrid.performed -= instance.OnNextGrid;
                @NextGrid.canceled -= instance.OnNextGrid;
                @SwitchTarget.started -= instance.OnSwitchTarget;
                @SwitchTarget.performed -= instance.OnSwitchTarget;
                @SwitchTarget.canceled -= instance.OnSwitchTarget;
                @StartResonance.started -= instance.OnStartResonance;
                @StartResonance.performed -= instance.OnStartResonance;
                @StartResonance.canceled -= instance.OnStartResonance;
                @StopResonance.started -= instance.OnStopResonance;
                @StopResonance.performed -= instance.OnStopResonance;
                @StopResonance.canceled -= instance.OnStopResonance;
            }

            public void RemoveCallbacks(IResonanceWheelUIActions instance)
            {
                if (m_Wrapper.m_ResonanceWheelUIActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IResonanceWheelUIActions instance)
            {
                foreach (var item in m_Wrapper.m_ResonanceWheelUIActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_ResonanceWheelUIActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public ResonanceWheelUIActions @ResonanceWheelUI => new ResonanceWheelUIActions(this);

        // OrderBoardPanel
        private readonly InputActionMap m_OrderBoardPanel;
        private List<IOrderBoardPanelActions> m_OrderBoardPanelActionsCallbackInterfaces = new List<IOrderBoardPanelActions>();
        private readonly InputAction m_OrderBoardPanel_NextTerm;
        private readonly InputAction m_OrderBoardPanel_LastTerm;
        public struct OrderBoardPanelActions
        {
            private @PlayerInput m_Wrapper;
            public OrderBoardPanelActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @NextTerm => m_Wrapper.m_OrderBoardPanel_NextTerm;
            public InputAction @LastTerm => m_Wrapper.m_OrderBoardPanel_LastTerm;
            public InputActionMap Get() { return m_Wrapper.m_OrderBoardPanel; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(OrderBoardPanelActions set) { return set.Get(); }
            public void AddCallbacks(IOrderBoardPanelActions instance)
            {
                if (instance == null || m_Wrapper.m_OrderBoardPanelActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_OrderBoardPanelActionsCallbackInterfaces.Add(instance);
                @NextTerm.started += instance.OnNextTerm;
                @NextTerm.performed += instance.OnNextTerm;
                @NextTerm.canceled += instance.OnNextTerm;
                @LastTerm.started += instance.OnLastTerm;
                @LastTerm.performed += instance.OnLastTerm;
                @LastTerm.canceled += instance.OnLastTerm;
            }

            private void UnregisterCallbacks(IOrderBoardPanelActions instance)
            {
                @NextTerm.started -= instance.OnNextTerm;
                @NextTerm.performed -= instance.OnNextTerm;
                @NextTerm.canceled -= instance.OnNextTerm;
                @LastTerm.started -= instance.OnLastTerm;
                @LastTerm.performed -= instance.OnLastTerm;
                @LastTerm.canceled -= instance.OnLastTerm;
            }

            public void RemoveCallbacks(IOrderBoardPanelActions instance)
            {
                if (m_Wrapper.m_OrderBoardPanelActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IOrderBoardPanelActions instance)
            {
                foreach (var item in m_Wrapper.m_OrderBoardPanelActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_OrderBoardPanelActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public OrderBoardPanelActions @OrderBoardPanel => new OrderBoardPanelActions(this);

        // ResonanceWheelUI_sub1
        private readonly InputActionMap m_ResonanceWheelUI_sub1;
        private List<IResonanceWheelUI_sub1Actions> m_ResonanceWheelUI_sub1ActionsCallbackInterfaces = new List<IResonanceWheelUI_sub1Actions>();
        private readonly InputAction m_ResonanceWheelUI_sub1_Expel;
        private readonly InputAction m_ResonanceWheelUI_sub1_Receive;
        public struct ResonanceWheelUI_sub1Actions
        {
            private @PlayerInput m_Wrapper;
            public ResonanceWheelUI_sub1Actions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @Expel => m_Wrapper.m_ResonanceWheelUI_sub1_Expel;
            public InputAction @Receive => m_Wrapper.m_ResonanceWheelUI_sub1_Receive;
            public InputActionMap Get() { return m_Wrapper.m_ResonanceWheelUI_sub1; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(ResonanceWheelUI_sub1Actions set) { return set.Get(); }
            public void AddCallbacks(IResonanceWheelUI_sub1Actions instance)
            {
                if (instance == null || m_Wrapper.m_ResonanceWheelUI_sub1ActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_ResonanceWheelUI_sub1ActionsCallbackInterfaces.Add(instance);
                @Expel.started += instance.OnExpel;
                @Expel.performed += instance.OnExpel;
                @Expel.canceled += instance.OnExpel;
                @Receive.started += instance.OnReceive;
                @Receive.performed += instance.OnReceive;
                @Receive.canceled += instance.OnReceive;
            }

            private void UnregisterCallbacks(IResonanceWheelUI_sub1Actions instance)
            {
                @Expel.started -= instance.OnExpel;
                @Expel.performed -= instance.OnExpel;
                @Expel.canceled -= instance.OnExpel;
                @Receive.started -= instance.OnReceive;
                @Receive.performed -= instance.OnReceive;
                @Receive.canceled -= instance.OnReceive;
            }

            public void RemoveCallbacks(IResonanceWheelUI_sub1Actions instance)
            {
                if (m_Wrapper.m_ResonanceWheelUI_sub1ActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IResonanceWheelUI_sub1Actions instance)
            {
                foreach (var item in m_Wrapper.m_ResonanceWheelUI_sub1ActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_ResonanceWheelUI_sub1ActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public ResonanceWheelUI_sub1Actions @ResonanceWheelUI_sub1 => new ResonanceWheelUI_sub1Actions(this);

        // ResonanceWheelUI_sub2
        private readonly InputActionMap m_ResonanceWheelUI_sub2;
        private List<IResonanceWheelUI_sub2Actions> m_ResonanceWheelUI_sub2ActionsCallbackInterfaces = new List<IResonanceWheelUI_sub2Actions>();
        private readonly InputAction m_ResonanceWheelUI_sub2_LastTerm;
        private readonly InputAction m_ResonanceWheelUI_sub2_NextTerm;
        private readonly InputAction m_ResonanceWheelUI_sub2_NextGrid;
        private readonly InputAction m_ResonanceWheelUI_sub2_Confirm;
        public struct ResonanceWheelUI_sub2Actions
        {
            private @PlayerInput m_Wrapper;
            public ResonanceWheelUI_sub2Actions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @LastTerm => m_Wrapper.m_ResonanceWheelUI_sub2_LastTerm;
            public InputAction @NextTerm => m_Wrapper.m_ResonanceWheelUI_sub2_NextTerm;
            public InputAction @NextGrid => m_Wrapper.m_ResonanceWheelUI_sub2_NextGrid;
            public InputAction @Confirm => m_Wrapper.m_ResonanceWheelUI_sub2_Confirm;
            public InputActionMap Get() { return m_Wrapper.m_ResonanceWheelUI_sub2; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(ResonanceWheelUI_sub2Actions set) { return set.Get(); }
            public void AddCallbacks(IResonanceWheelUI_sub2Actions instance)
            {
                if (instance == null || m_Wrapper.m_ResonanceWheelUI_sub2ActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_ResonanceWheelUI_sub2ActionsCallbackInterfaces.Add(instance);
                @LastTerm.started += instance.OnLastTerm;
                @LastTerm.performed += instance.OnLastTerm;
                @LastTerm.canceled += instance.OnLastTerm;
                @NextTerm.started += instance.OnNextTerm;
                @NextTerm.performed += instance.OnNextTerm;
                @NextTerm.canceled += instance.OnNextTerm;
                @NextGrid.started += instance.OnNextGrid;
                @NextGrid.performed += instance.OnNextGrid;
                @NextGrid.canceled += instance.OnNextGrid;
                @Confirm.started += instance.OnConfirm;
                @Confirm.performed += instance.OnConfirm;
                @Confirm.canceled += instance.OnConfirm;
            }

            private void UnregisterCallbacks(IResonanceWheelUI_sub2Actions instance)
            {
                @LastTerm.started -= instance.OnLastTerm;
                @LastTerm.performed -= instance.OnLastTerm;
                @LastTerm.canceled -= instance.OnLastTerm;
                @NextTerm.started -= instance.OnNextTerm;
                @NextTerm.performed -= instance.OnNextTerm;
                @NextTerm.canceled -= instance.OnNextTerm;
                @NextGrid.started -= instance.OnNextGrid;
                @NextGrid.performed -= instance.OnNextGrid;
                @NextGrid.canceled -= instance.OnNextGrid;
                @Confirm.started -= instance.OnConfirm;
                @Confirm.performed -= instance.OnConfirm;
                @Confirm.canceled -= instance.OnConfirm;
            }

            public void RemoveCallbacks(IResonanceWheelUI_sub2Actions instance)
            {
                if (m_Wrapper.m_ResonanceWheelUI_sub2ActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IResonanceWheelUI_sub2Actions instance)
            {
                foreach (var item in m_Wrapper.m_ResonanceWheelUI_sub2ActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_ResonanceWheelUI_sub2ActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public ResonanceWheelUI_sub2Actions @ResonanceWheelUI_sub2 => new ResonanceWheelUI_sub2Actions(this);

        // BeastPanel
        private readonly InputActionMap m_BeastPanel;
        private List<IBeastPanelActions> m_BeastPanelActionsCallbackInterfaces = new List<IBeastPanelActions>();
        private readonly InputAction m_BeastPanel_SwitchBeast;
        private readonly InputAction m_BeastPanel_Expel;
        public struct BeastPanelActions
        {
            private @PlayerInput m_Wrapper;
            public BeastPanelActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @SwitchBeast => m_Wrapper.m_BeastPanel_SwitchBeast;
            public InputAction @Expel => m_Wrapper.m_BeastPanel_Expel;
            public InputActionMap Get() { return m_Wrapper.m_BeastPanel; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(BeastPanelActions set) { return set.Get(); }
            public void AddCallbacks(IBeastPanelActions instance)
            {
                if (instance == null || m_Wrapper.m_BeastPanelActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_BeastPanelActionsCallbackInterfaces.Add(instance);
                @SwitchBeast.started += instance.OnSwitchBeast;
                @SwitchBeast.performed += instance.OnSwitchBeast;
                @SwitchBeast.canceled += instance.OnSwitchBeast;
                @Expel.started += instance.OnExpel;
                @Expel.performed += instance.OnExpel;
                @Expel.canceled += instance.OnExpel;
            }

            private void UnregisterCallbacks(IBeastPanelActions instance)
            {
                @SwitchBeast.started -= instance.OnSwitchBeast;
                @SwitchBeast.performed -= instance.OnSwitchBeast;
                @SwitchBeast.canceled -= instance.OnSwitchBeast;
                @Expel.started -= instance.OnExpel;
                @Expel.performed -= instance.OnExpel;
                @Expel.canceled -= instance.OnExpel;
            }

            public void RemoveCallbacks(IBeastPanelActions instance)
            {
                if (m_Wrapper.m_BeastPanelActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IBeastPanelActions instance)
            {
                foreach (var item in m_Wrapper.m_BeastPanelActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_BeastPanelActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public BeastPanelActions @BeastPanel => new BeastPanelActions(this);
        public interface IPlayerActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnAcc(InputAction.CallbackContext context);
            void OnCrouch(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnMouseX(InputAction.CallbackContext context);
            void OnMouseY(InputAction.CallbackContext context);
            void OnOpenBotUI(InputAction.CallbackContext context);
            void OnMouseScroll(InputAction.CallbackContext context);
        }
        public interface IPlayerUIBotActions
        {
            void OnOpenMenu(InputAction.CallbackContext context);
            void OnOpenMap(InputAction.CallbackContext context);
            void OnSelectGrid(InputAction.CallbackContext context);
        }
        public interface ITechTreeActions
        {
            void OnLastTerm(InputAction.CallbackContext context);
            void OnNextTerm(InputAction.CallbackContext context);
            void OnDecipher(InputAction.CallbackContext context);
            void OnAlterTP(InputAction.CallbackContext context);
            void OnInspect(InputAction.CallbackContext context);
        }
        public interface IPlayerUIActions
        {
            void OnAlterSelected(InputAction.CallbackContext context);
        }
        public interface IUIInventoryActions
        {
            void OnDrop(InputAction.CallbackContext context);
            void OnDestroy(InputAction.CallbackContext context);
            void OnUse(InputAction.CallbackContext context);
            void OnAlterItem(InputAction.CallbackContext context);
            void OnNextTerm(InputAction.CallbackContext context);
            void OnLastTerm(InputAction.CallbackContext context);
        }
        public interface IUIStoreActions
        {
            void OnChangeIcon(InputAction.CallbackContext context);
            void OnNextPriority(InputAction.CallbackContext context);
            void OnChangeItem(InputAction.CallbackContext context);
            void OnRemove(InputAction.CallbackContext context);
            void OnFastAdd(InputAction.CallbackContext context);
            void OnUpgrade(InputAction.CallbackContext context);
        }
        public interface IUIProNodeActions
        {
            void OnUpgrade(InputAction.CallbackContext context);
            void OnNextPriority(InputAction.CallbackContext context);
            void OnRemove(InputAction.CallbackContext context);
            void OnFastAdd(InputAction.CallbackContext context);
            void OnAlter(InputAction.CallbackContext context);
        }
        public interface IUIBedActions
        {
            void OnSetEmpty(InputAction.CallbackContext context);
            void OnPre(InputAction.CallbackContext context);
            void OnPost(InputAction.CallbackContext context);
        }
        public interface IResonanceWheelUIActions
        {
            void OnNextTerm(InputAction.CallbackContext context);
            void OnLastTerm(InputAction.CallbackContext context);
            void OnNextGrid(InputAction.CallbackContext context);
            void OnSwitchTarget(InputAction.CallbackContext context);
            void OnStartResonance(InputAction.CallbackContext context);
            void OnStopResonance(InputAction.CallbackContext context);
        }
        public interface IOrderBoardPanelActions
        {
            void OnNextTerm(InputAction.CallbackContext context);
            void OnLastTerm(InputAction.CallbackContext context);
        }
        public interface IResonanceWheelUI_sub1Actions
        {
            void OnExpel(InputAction.CallbackContext context);
            void OnReceive(InputAction.CallbackContext context);
        }
        public interface IResonanceWheelUI_sub2Actions
        {
            void OnLastTerm(InputAction.CallbackContext context);
            void OnNextTerm(InputAction.CallbackContext context);
            void OnNextGrid(InputAction.CallbackContext context);
            void OnConfirm(InputAction.CallbackContext context);
        }
        public interface IBeastPanelActions
        {
            void OnSwitchBeast(InputAction.CallbackContext context);
            void OnExpel(InputAction.CallbackContext context);
        }
    }
}
